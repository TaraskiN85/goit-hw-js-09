{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,SAElCE,EAAOC,EAAMC,KAAWC,GAAQ,IAAIP,EAAKQ,UAE1CC,EAAe,C,MACnBL,E,KACAC,E,OACAC,GAGII,EAAgB,CAACC,EAAUC,IACf,IAAIC,SAAQ,CAACC,EAAKC,KAChC,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAa,CACjBC,gBAAiBT,EACjBU,aAAcT,GAEhBU,YAAW,KACLN,EACFF,EAAIK,GAEJJ,EAAII,EAAW,GAEhBP,EAAM,IAiCbZ,EAAKuB,iBAAiB,SAJNC,IACdf,EAAae,EAAMC,OAAOC,OAASF,EAAMC,OAAOE,KAAK,IAIvDxB,EAAUoB,iBAAiB,SA5BJC,IACrBA,EAAMI,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAaqB,OAAQD,IACvCnB,EAAcmB,EAAI,EAAGpB,EAAasB,MAAQF,EAAIpB,EAAauB,MACxDC,MAAK,EAACb,gBAAEA,EAAeC,aAAEA,MACxBvB,EAAAoC,OAAOC,QACL,uBAAqBf,QAAwBC,MAAkB,CAE7De,QAAS,KAEZ,IAEFC,OAAM,EAACjB,gBAAEA,EAAeC,aAAEA,MACzBvB,EAAAoC,OAAOI,QACL,sBAAoBlB,QAAsBC,MAAkB,CAE1De,QAAS,KAEZ,GACD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst createBtn = document.querySelector('.btn');\n\nconst [delay, step, amount, ...rest] = [...form.elements];\n\nconst promisesData = {\n  delay,\n  step,\n  amount,\n};\n\nconst createPromise = (position, delay) => {\n  const promise = new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    const promiseObj = {\n      promisePosition: position,\n      promiseDelay: delay,\n    };\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(promiseObj);\n      } else {\n        rej(promiseObj);\n      }\n    }, delay);\n  });\n\n  return promise;\n};\n\nconst createPromises = event => {\n  event.preventDefault();\n  for (let i = 0; i < promisesData.amount; i++) {\n    createPromise(i + 1, promisesData.delay + i * promisesData.step)\n      .then(({ promisePosition, promiseDelay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${promisePosition} in ${promiseDelay}ms`,\n          {\n            timeout: 3000,\n          }\n        );\n      })\n      .catch(({ promisePosition, promiseDelay }) => {\n        Notify.failure(\n          `❌ Rejected promise ${promisePosition} in ${promiseDelay}ms`,\n          {\n            timeout: 3000,\n          }\n        );\n      });\n  }\n};\n\nconst addData = event => {\n  promisesData[event.target.name] = +event.target.value;\n};\n\nform.addEventListener('input', addData);\ncreateBtn.addEventListener('click', createPromises);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createBtn","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$rest","elements","$47d4ff9957288465$var$promisesData","$47d4ff9957288465$var$createPromise","position","delay1","Promise","res","rej","shouldResolve","Math","random","promiseObj","promisePosition","promiseDelay","setTimeout","addEventListener","event","target","name","value","preventDefault","i","amount","delay","step","then","Notify","success","timeout","catch","failure"],"version":3,"file":"03-promises.4512d64f.js.map"}